name: Build and deploy Django app to Azure Web App - backendazure

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4  # 리포지토리에서 코드를 가져옵니다

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Activate existing virtual environment  # 기존의 'antenv' 가상환경을 활성화
        run: |
          source antenv/bin/activate

      - name: Install dependencies
        run: |
          source antenv/bin/activate
          pip install -r backend/requirements.txt  # 의존성 설치

      - name: Run Django tests
        run: |
          source antenv/bin/activate
          python backend/manage.py test  # Django 테스트 실행

      - name: Zip artifact for deployment
        run: zip -r release.zip backend -x '*.git*' -x 'antenv/*'  # backend 폴더만 압축

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: django-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: django-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_BACKEND }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'teambackend'
          package: './backend'  # backend 폴더 배포

      - name: Make migrations  # Django 모델 변경 사항에 대한 마이그레이션 파일 생성
        run: |
          source antenv/bin/activate  # 가상 환경 활성화
          python backend/manage.py makemigrations

      - name: Run database migrations  # 생성된 마이그레이션 파일을 기반으로 DB에 적용
        run: |
          source antenv/bin/activate  # 가상 환경 활성화
          python backend/manage.py migrate

      - name: Collect static files
        run: |
          source antenv/bin/activate  # 가상 환경 활성화
          python backend/manage.py collectstatic --noinput  # 정적 파일 수집
