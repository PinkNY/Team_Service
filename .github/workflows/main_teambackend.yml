name: Build and deploy Django app to Azure Web App - backendazure

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'  # backend 디렉토리 안에서만 변경이 있을 때만 트리거
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Create and start virtual environment
        run: |
          python -m venv backend/venv  # backend 폴더 내부에 venv 생성
          source backend/venv/bin/activate

      - name: Install dependencies
        run: |
          source backend/venv/bin/activate
          pip install -r backend/requirements.txt

      - name: Run Django tests
        run: |
          source backend/venv/bin/activate
          python backend/manage.py test

      - name: Zip artifact for deployment
        run: zip -r release.zip backend -x '*.git*' -x 'backend/venv/*'

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: django-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: django-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_BACKEND }}

      - name: Set up Python version (again)
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies on Azure
        run: |
          pip install -r backend/requirements.txt

      - name: Run database migrations
        run: |
          python backend/manage.py migrate

      - name: Collect static files
        run: |
          python backend/manage.py collectstatic --noinput
